# -*- coding: utf-8 -*-
"""Ebook Case Anomaly detection - Aug 2025

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11zsxyIS7SMMDHCJakNSY8LWi6qOObHLp
"""

#code snippet 1
#Installing pyod package for anormaly detection algorithms (knn)
!pip install pyod

#code snippet 2
#Importing pyod
from pyod.models.knn import KNN

# Code snippet 3
# Importing the dataset
import pandas as pd
data = pd.read_csv('https://raw.githubusercontent.com/Imjuandiaz/Customer_data_Ebook/refs/heads/main/Customer%20Data%20Apr%202024%20-%20Customer%20Data.csv')


data

# Code snippet 4
# Create new dataset with only numerical columns
numeric_dataset = data.select_dtypes(include=['float64', 'int64'])
numeric_dataset

# Code snippet 5
# Training with the KNN algorithm to identify the anomalies
ad_model = KNN()
# Drop rows with NaN values
numeric_dataset_cleaned = numeric_dataset.dropna()
ad_model.fit(numeric_dataset_cleaned)

# Code snippet 6
#Predict anomalies (1 = normal, -1 = Anomaly)
anomaly_labels = ad_model.labels_
anomaly_scores = ad_model.decision_scores_

# Code snippet 7
# Adding the anomaly results to the original dataframe

# Create a new DataFrame with anomaly results and the index of the cleaned dataset
anomaly_results = pd.DataFrame({
    'Anomaly_Label': anomaly_labels,
    'Anomaly_Score': anomaly_scores
}, index=numeric_dataset_cleaned.index)

# Merge the anomaly results back to the original dataframe based on the index
data = data.merge(anomaly_results, left_index=True, right_index=True, how='left')

data

# Code snippet 8
# Exporting the dataset to a csv file with anomaly info
data.to_csv('DonorIndicator_KNN_Anomalies.csv', index=False)

# Code snippet 9
# Displaying the number of anomalies
num_anomalies = (data['Anomaly_Label'] == 1).sum()
print(f"Number of anomalies: {num_anomalies}")

#code snippet 9
#show only anomaly_labe = 1
pp = data[data['Anomaly_Label'] == 1]

# Code snippet 8
# Exporting the dataset to a csv file with anomaly info
pp.to_csv('positive_DonorIndicator_KNN_Anomalies.csv', index=False)